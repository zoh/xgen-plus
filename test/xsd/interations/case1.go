// Code generated by xgen-plus. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// "SimpleType"
// base:"xs:Name"
// TAcsiName ...
type TAcsiName string

// "SimpleType"
// base:"tAcsiName"
// TIEDName ...
type TIEDName string

// "SimpleType"
// base:"tAcsiName"
// TIEDNameIsNone ...
type TIEDNameIsNone string

// "SimpleType"
// TIEDNameOrNone ...
type TIEDNameOrNone struct { /* UNION */
	TIEDName       *string
	TIEDNameIsNone *string
}

// "ComplexType"
// TAnyContentFromOtherNamespace ...
type TAnyContentFromOtherNamespace struct {
	NodeID
	AdditionalFields AdditionalFieldsType `xml:",any,attr"`
	CustomElements   []AnyHolder          `xml:",any"`
}

// "SimpleType"
// base:"xs:normalizedString"
// NormalizedString ...
type NormalizedString string

// "ComplexType"
// TPrivate ...
type TPrivate struct {
	TAnyContentFromOtherNamespace
	TypesssAttr *string          `xml:"typesss,attr,omitempty" json:"typesss,omitempty"`
	NameAttr    *TIEDName        `xml:"name,attr,omitempty" json:"name,omitempty"`
	TypeAttr    NormalizedString `xml:"type,attr" json:"type"`
	SourceAttr  string           `xml:"source,attr" json:"source"`
}

// "ComplexType"
// TVal ...
type TVal struct {
	NormalizedString
	SGroupAttr *uint32 `xml:"sGroup,attr,omitempty" json:"sGroup,omitempty"`
}

// "ComplexType"
// TIDNaming ...
type TIDNaming struct {
	TBaseElement
	AgDesc     // AttributeGroup
	IdAttr TID `xml:"id,attr" json:"id"`
}

// "ComplexType"
// TBaseElement ...
type TBaseElement struct {
	NodeID
	AdditionalFields AdditionalFieldsType `xml:",any,attr"`
	CustomElements   []AnyHolder          `xml:",any"`
	Text             TText                `xml:"Text" json:"Text"`
	Private          []TPrivate           `xml:"Private" json:"Private"`
}

// "SimpleType"
// base:"xs:token"
// TID ...
type TID string

// "AttributeGroup"
// AgDesc ...
type AgDesc struct {
	DescAttr string `xml:"desc,attr,omitempty" json:"desc,omitempty"`
}

// "ComplexType"
// TText ...
type TText struct {
	TAnyContentFromOtherNamespace
	SourceAttr *string `xml:"source,attr,omitempty" json:"source,omitempty"`
}
