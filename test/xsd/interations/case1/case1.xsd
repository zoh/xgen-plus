<?xml version="1.0" encoding="UTF-8"?>
<xs:schema
        xmlns="http://www.iec.ch/61850/2003/SCL"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        targetNamespace="http://www.iec.ch/61850/2003/SCL"
        elementFormDefault="qualified"
        version="2007B4"
>

    <xs:simpleType name="tAcsiName">
        <xs:restriction base="xs:Name">
            <xs:pattern value="[A-Za-z][0-9A-Za-z_]*"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="tIEDName">
        <xs:restriction base="tAcsiName">
            <xs:minLength value="1"/>
            <xs:maxLength value="64"/>
            <xs:pattern value="[A-Za-z][0-9A-Za-z_]{0,2}"/>
            <xs:pattern value="[A-Za-z][0-9A-Za-z_]{4,63}"/>
            <xs:pattern value="[A-MO-Za-z][0-9A-Za-z_]{3}"/>
            <xs:pattern value="N[0-9A-Za-np-z_][0-9A-Za-z_]{2}"/>
            <xs:pattern value="No[0-9A-Za-mo-z_][0-9A-Za-z_]"/>
            <xs:pattern value="Non[0-9A-Za-df-z_]"/>
        </xs:restriction>
    </xs:simpleType>


    <xs:simpleType name="tIEDNameIsNone">
        <xs:restriction base="tAcsiName">
            <xs:pattern value="None"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="tIEDNameOrNone">
        <xs:union memberTypes="tIEDName tIEDNameIsNone"/>
    </xs:simpleType>

    <xs:complexType name="tAnyContentFromOtherNamespace" abstract="true" mixed="true">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:any namespace="##other" processContents="lax"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>

    <xs:complexType name="tPrivate" mixed="true">
        <xs:complexContent>
            <xs:extension base="tAnyContentFromOtherNamespace">
                <xs:attribute name="typesss" type="xs:normalizedString" use="optional"/>
                <xs:attribute name="name" type="tIEDName" use="optional"/>
                <xs:attribute name="type" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:normalizedString">
                            <xs:minLength value="1"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="source" type="xs:anyURI" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:complexType name="tVal">
        <xs:simpleContent>
            <xs:extension base="xs:normalizedString">
                <xs:attribute name="sGroup" type="xs:unsignedInt" use="optional"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>


    <xs:complexType name="tIDNaming" abstract="true">
        <xs:complexContent>
            <xs:extension base="tBaseElement">
                <xs:attribute name="id" type="tID" use="required"/>
                <xs:attributeGroup ref="agDesc"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="tBaseElement" abstract="true">
        <xs:sequence>
            <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Text" type="tText" minOccurs="0"/>
            <xs:element name="Private" type="tPrivate" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>

    <xs:simpleType name="tID">
        <xs:restriction base="xs:token">
            <xs:minLength value="1"/>
            <xs:maxLength value="255"/>
            <xs:pattern value="\S+"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:attributeGroup name="agDesc">
        <xs:attribute name="desc" type="xs:normalizedString" use="optional" default=""/>
    </xs:attributeGroup>

    <xs:complexType name="tText" mixed="true">
        <xs:complexContent>
            <xs:extension base="tAnyContentFromOtherNamespace">
                <xs:attribute name="source" type="xs:anyURI" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
